---
- name: Create datavg
  community.general.lvg:
    vg: data
    pvs: /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_drive-scsi1

- name: Create prometheus lv
  community.general.lvol:
    vg: data
    lv: prometheus
    size: 95G

- name: Format prometheus lv
  community.general.filesystem:
    fstype: xfs
    dev: /dev/data/prometheus

- name: Mount prometheus drive
  ansible.posix.mount:
    path: /var/lib/prometheus
    src: /dev/data/prometheus
    fstype: xfs
    boot: true
    state: mounted

# Start Consul Config
- name: Service Consul Config
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/consul.d/{{ item | basename }}"
    mode: "0644"
    owner: consul
    group: consul
  with_fileglob:
    - ../templates/etc/consul.d/*.service.hcl
  register: service_consul_config

- name: Restart Consul # noqa: no-handler
  ansible.builtin.systemd_service:
    name: consul
    state: restarted
  when: service_consul_config.changed
# End Consul Config

# Not installing prometheus from package because debian patches out the SD
# configs without documenting it, so you get weird error messages
# Ref: https://salsa.debian.org/go-team/packages/prometheus/-/tree/debian/sid/debian/patches?ref_type=heads
# - name: Install Prometheus
#   ansible.builtin.package:
#     name: prometheus
#     state: present

# Start Prometheus
- name: Download Prometheus archive
  ansible.builtin.get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v3.1.0/prometheus-3.1.0.linux-amd64.tar.gz"
    dest: /var/lib/prometheus.tar.gz
    checksum: "sha256:9a9d1e115d1745826b13aec3f1409780b9fcf1d4206746cb4faee46ca5add70c"
    mode: "0666"

- name: Extract Prometheus archive
  ansible.builtin.unarchive:
    src: /var/lib/prometheus.tar.gz
    dest: /var/lib
    remote_src: true

- name: Copy Prometheus binary
  ansible.builtin.copy:
    src: /var/lib/prometheus-3.1.0.linux-amd64/prometheus
    dest: /usr/local/bin/prometheus
    mode: "0755"
    remote_src: true

- name: Copy Promtool binary
  ansible.builtin.copy:
    src: /var/lib/prometheus-3.1.0.linux-amd64/promtool
    dest: /usr/local/bin/promtool
    mode: "0755"
    remote_src: true

- name: Create Prometheus Config Dir
  ansible.builtin.file:
    path: /etc/prometheus
    state: directory
    owner: prometheus
    group: prometheus
    mode: "0775"

- name: Create Prometheus Data Dir
  ansible.builtin.file:
    path: /var/lib/prometheus/data
    state: directory
    owner: prometheus
    group: prometheus
    mode: "0775"

- name: Prometheus SystemD
  ansible.builtin.template:
    src: etc/systemd/system/prometheus.service
    dest: /etc/systemd/system/prometheus.service
    mode: "0644"
  register: prometheus_systemd

- name: Prometheus systemd # noqa: no-handler
  ansible.builtin.systemd:
    daemon_reload: true
  when: prometheus_systemd.changed

- name: Start and enable Consul Template for Consul
  ansible.builtin.systemd:
    name: consul-template-consul
    state: started
    enabled: true

- name: Configure Prometheus
  ansible.builtin.template:
    src: etc/prometheus/prometheus.yml
    dest: /etc/prometheus/prometheus.yml
    mode: "0600"
    owner: prometheus
    group: prometheus
  register: prometheus_config

- name: Configure Prometheus Web
  ansible.builtin.template:
    src: etc/prometheus/web_config.yml
    dest: /etc/prometheus/web_config.yml
    mode: "0600"
    owner: prometheus
    group: prometheus
  register: prometheus_web_config

- name: Create Prometheus Scrape Configs Dir
  ansible.builtin.file:
    path: /etc/prometheus/scrape_configs/
    state: directory
    owner: prometheus
    group: prometheus
    mode: "0775"

- name: Prometheus Scrape Configs
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/prometheus/scrape_configs/{{ item | basename }}"
    mode: "0600"
    owner: prometheus
    group: prometheus
  with_fileglob:
    - ../templates/etc/prometheus/scrape_configs/*.yml
  register: prometheus_scrape_configs

- name: Create Prometheus TLS Dir
  ansible.builtin.file:
    path: /etc/prometheus/tls/
    state: directory
    owner: prometheus
    group: prometheus
    mode: "0775"

- name: Create Promethues Certificates
  ansible.builtin.command: >-
    step ca certificate {{ ansible_fqdn }}
    /etc/prometheus/tls/prometheus.crt
    /etc/prometheus/tls/prometheus.key
    --ca-url https://step-ca.us-homelab1.hl.rmb938.me:8443
    --root /usr/local/share/ca-certificates/smallstep-homelab-prod.crt
  args:
    creates: "/etc/prometheus/tls/prometheus.crt"

- name: Own Promethues certificates
  ansible.builtin.file:
    path: /etc/prometheus/tls/{{ item }}
    owner: prometheus
    group: prometheus
    mode: "0600"
  with_items:
    - prometheus.crt
    - prometheus.key

- name: Cron to renew prometheus certificates
  ansible.builtin.cron:
    name: "renew prometheus certificates"
    special_time: "hourly"
    # Rekey needs to happen against the CA, RA's don't support rekey
    # https://smallstep.com/docs/step-ca/registration-authority-ra-mode/#stepcas-limitations
    job: >-
      step ca rekey etc/prometheus/tls/prometheus.crt
      /etc/prometheus/tls/prometheus.key
      --ca-url https://step-ca.us-homelab1.hl.rmb938.me
      --root /usr/local/share/ca-certificates/smallstep-homelab-prod.crt
      --force --expires-in 720h --exec "systemctl try-reload-or-restart prometheus"
    state: present

- name: Start and Enable Prometheus
  ansible.builtin.systemd:
    name: prometheus
    state: started
    enabled: true

- name: Restart prometheus if systemd changed # noqa: no-handler
  ansible.builtin.systemd:
    name: prometheus
    state: reloaded
  when: prometheus_systemd.changed

- name: Restart prometheus if config changed # noqa: no-handler
  ansible.builtin.systemd:
    name: prometheus
    state: reloaded
  when: prometheus_web_config.changed or
    prometheus_config.changed or
    prometheus_scrape_configs.changed
# End Prometheus

# Start Consul Template for Prometheus
- name: Add prometheus to sudoers
  community.general.sudoers:
    name: prometheus
    user: prometheus
    nopassword: true
    validation: required
    commands:
      - /usr/bin/systemctl reload-or-restart prometheus
    state: present

- name: Configure Consul Template for prometheus
  ansible.builtin.template:
    src: etc/consul-template/consul-template-prometheus.hcl
    dest: /etc/consul-template/consul-template-prometheus.hcl
    mode: "0644"
    owner: prometheus
    group: prometheus
  register: consul_template_prometheus_config

- name: Create Consul Template for prometheus Templates directory
  ansible.builtin.file:
    path: /etc/consul-template/templates/prometheus/
    state: directory
    mode: "0744"
    owner: prometheus
    group: prometheus

- name: Place Consul Template for prometheus Templates Files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/etc/consul-template/templates/prometheus/{{ item | basename }}"
    mode: "0644"
    owner: haproxy
    group: haproxy
  with_fileglob:
    - ../files/etc/consul-template/templates/prometheus/*.ctmpl
  register: consul_template_prometheus_templates_files

- name: Place Consul Template for prometheus Templates Templates
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/consul-template/templates/prometheus/{{ item | basename }}"
    mode: "0644"
    owner: prometheus
    group: prometheus
  with_fileglob:
    - ../templates/etc/consul-template/templates/prometheus/*.ctmpl
  register: consul_template_prometheus_templates

- name: Consul Template for prometheus SystemD
  ansible.builtin.template:
    src: etc/systemd/system/consul-template-prometheus.service
    dest: /etc/systemd/system/consul-template-prometheus.service
    mode: "0644"
  register: consul_template_prometheus_systemd

- name: Consul Template for prometheus systemd # noqa: no-handler
  ansible.builtin.systemd:
    daemon_reload: true
  when: consul_template_prometheus_systemd.changed

- name: Start and enable Consul Template for prometheus
  ansible.builtin.systemd:
    name: consul-template-prometheus
    state: started
    enabled: true

- name: Restart Consul Template for prometheus if config changed # noqa: no-handler
  ansible.builtin.systemd:
    name: consul-template-prometheus
    state: reloaded
  when: consul_template_prometheus_templates.changed or consul_template_prometheus_config.changed or consul_template_prometheus_templates_files.changed
# End Consul Template for prometheus

# Start Grafana PDC Agent
- name: Download Grafana PDC archive
  ansible.builtin.get_url:
    url: "https://github.com/grafana/pdc-agent/releases/download/v0.0.40/pdc-agent_Linux_x86_64.tar.gz"
    dest: /var/lib/grafana-pdc.tar.gz
    checksum: "sha256:0d9fa9d52945671f252962e1955cdacf5474b96be3c2e2de4a345176d042ba2f"
    mode: "0666"

- name: Extract Grafana PDC archive
  ansible.builtin.unarchive:
    src: /var/lib/grafana-pdc.tar.gz
    dest: /var/lib
    remote_src: true

- name: Copy Grafana PDC binary
  ansible.builtin.copy:
    src: /var/lib/pdc-agent_Linux_x86_64/pdc
    dest: /usr/local/bin/grafana-pdc
    mode: "0755"
    remote_src: true

- name: Create grafana-pdc group
  ansible.builtin.group:
    name: grafana-pdc
    state: present
    system: true

- name: Create grafana-pdc user
  ansible.builtin.user:
    name: grafana-pdc
    group: grafana-pdc
    home: /etc/grafana-pdc
    create_home: false
    state: present
    system: true

- name: Create grafana-pdc home dir
  ansible.builtin.file:
    path: /etc/grafana-pdc
    state: directory
    owner: grafana-pdc
    group: grafana-pdc
    mode: "0775"

- name: Create grafana-pdc ssh dir
  ansible.builtin.file:
    path: /etc/grafana-pdc/.ssh
    state: directory
    owner: grafana-pdc
    group: grafana-pdc
    mode: "0775"

- name: Grafana PDC SystemD
  ansible.builtin.template:
    src: etc/systemd/system/grafana-pdc.service
    dest: /etc/systemd/system/grafana-pdc.service
    mode: "0644"
  register: grafana_pdc_systemd

- name: Grafana PDC systemd # noqa: no-handler
  ansible.builtin.systemd:
    daemon_reload: true
  when: grafana_pdc_systemd.changed
# End Grafana PDC Agent

# Start Consul Template for grafana-pdc
- name: Add grafana-pdc to sudoers
  community.general.sudoers:
    name: grafana-pdc
    user: grafana-pdc
    nopassword: true
    validation: required
    commands:
      - /usr/bin/systemctl reload-or-restart grafana-pdc
    state: present

- name: Configure Consul Template for grafana-pdc
  ansible.builtin.template:
    src: etc/consul-template/consul-template-grafana-pdc.hcl
    dest: /etc/consul-template/consul-template-grafana-pdc.hcl
    mode: "0644"
    owner: grafana-pdc
    group: grafana-pdc
  register: consul_template_grafana_pdc_config

- name: Create Consul Template for grafana-pdc Templates directory
  ansible.builtin.file:
    path: /etc/consul-template/templates/grafana-pdc/
    state: directory
    mode: "0744"
    owner: grafana-pdc
    group: grafana-pdc

- name: Place Consul Template for grafana-pdc Templates Files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/etc/consul-template/templates/grafana-pdc/{{ item | basename }}"
    mode: "0644"
    owner: haproxy
    group: haproxy
  with_fileglob:
    - ../files/etc/consul-template/templates/grafana-pdc/*.ctmpl
  register: consul_template_grafana_pdc_templates_files

- name: Place Consul Template for grafana-pdc Templates Templates
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/consul-template/templates/grafana-pdc/{{ item | basename }}"
    mode: "0644"
    owner: grafana-pdc
    group: grafana-pdc
  with_fileglob:
    - ../templates/etc/consul-template/templates/grafana-pdc/*.ctmpl
  register: consul_template_grafana_pdc_templates

- name: Consul Template for grafana-pdc SystemD
  ansible.builtin.template:
    src: etc/systemd/system/consul-template-grafana-pdc.service
    dest: /etc/systemd/system/consul-template-grafana-pdc.service
    mode: "0644"
  register: consul_template_grafana_pdc_systemd

- name: Consul Template for grafana-pdc systemd # noqa: no-handler
  ansible.builtin.systemd:
    daemon_reload: true
  when: consul_template_grafana_pdc_systemd.changed

- name: Start and enable Consul Template for grafana-pdc
  ansible.builtin.systemd:
    name: consul-template-grafana-pdc
    state: started
    enabled: true

- name: Restart Consul Template for grafana-pdc if config changed # noqa: no-handler
  ansible.builtin.systemd:
    name: consul-template-grafana-pdc
    state: reloaded
  when: consul_template_grafana_pdc_templates.changed or
    consul_template_grafana_pdc_config.changed or
    consul_template_grafana_pdc_templates_files.changed
# End Consul Template for grafana-pdc
